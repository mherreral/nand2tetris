// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address[3..5], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
	
	RAM8(in=in, address=address[0..2], load=a, out=aout);
	RAM8(in=in, address=address[0..2], load=b, out=bout);
	RAM8(in=in, address=address[0..2], load=c, out=cout);
	RAM8(in=in, address=address[0..2], load=d, out=dout);
	RAM8(in=in, address=address[0..2], load=e, out=eout);
	RAM8(in=in, address=address[0..2], load=f, out=fout);
	RAM8(in=in, address=address[0..2], load=g, out=gout);
	RAM8(in=in, address=address[0..2], load=h, out=hout);
	
	Mux8Way16(a=aout, b=bout, c=cout, d=dout, e=eout,f=fout, g=gout, h=hout, sel=address, out=out);
}
